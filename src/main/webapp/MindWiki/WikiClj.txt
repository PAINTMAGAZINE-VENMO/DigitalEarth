;create WikiPage views
;{{{

((defn wiki []
  (handle "wiki"
   (fn []
    (let [name (.substring (.getPathInfo request) 6)]
     (if (.startsWith (.getPathInfo request) "/wiki/" )
      (str "<h3>" name "</h3>"
       (if (cache :picCache (keyword name))
        (do
         (Class/forName "org.apache.derby.jdbc.EmbeddedDriver")
         (let
          [con (java.sql.DriverManager/getConnection"jdbc:derby:base;create=true" "SYSDBA" "masterkey")
           stmt (.createStatement con)
           rs (.executeQuery stmt 
                (str "select * from depot,user_ where depot.user_id=user_.id and
                     user_.wikiname='" name "'"))]
          (if (.next rs)
            (str "<img title='Picture of " name "' src='" (cache :picCache (keyword name)) "'/>
              <a href='http://mindbroker.de/wiki/PremiumCitizen' style='color:green'>PremiumCitizen</a>?
            <table>
             <tr>
              <td>MindId:</td><td>" (.getInt rs "baseid")"</td></tr>
              <td>KayGroschen:</td><td>" (.getInt rs "kaygroschen")"</td>
             </tr>
            </table>")))))

       (let
        [buf
         (new java.io.BufferedReader
          (new java.io.StringReader
           (fetch-url (str "http://mindbroker.de/wiki/" name "?skin=raw"))))]
           ((fn mapLine [mode]
             (let [line (.readLine buf)]
               (if line
                 (str
                   (if (.startsWith line "* ")
                      ;;TODO (.compile "\* [A-Z]+[a-z]+[A-Z]+[a-z]+[a-zA-Z0-9]*: "
                      (str "<li>" (.substring line 2) "</li>")
                   )
                   (if (.equals "" line)
                      "<br/>"
                   )
                   (if (.startsWith line "|")
                    (str
                     (if (= mode :table)
                       ""
                       "<table>")
                     "<tr><td>"
                       (apply str (map (fn [x] (str x "</td><td>"))
                        (.split (.substring line 1) "\\|")))
                     "</td></tr>" (mapLine :table)))
                   (if (= mode :table)
                    (if (.startsWith line "|")
                     ""
                     "</table>"))
                   (if (.startsWith line "!")
                     (if (.startsWith line "!!")
                       (if (.startsWith line "!!!")
                         (str "<h4>" (.substring line 3) "</h4>")
                         (str "<h5>" (.substring line 2) "</h5>")
                       )
                       (str "<h6>" (.substring line 1) "</h6>")
                     )
                   )
                   (mapLine nil))
                 "")
                 )) nil))))))
   "")))

;}}}
