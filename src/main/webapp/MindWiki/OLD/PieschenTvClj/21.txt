;
;
;{{{

((defn tv [] 
  (handle "tv"
   (fn []
    (str
     "<table>"
     (apply str
      (map
       (fn [x]
        (if (= :entry (:tag x))
         (str 
           "<tr>"
           "<td><img src='" (:href (:attrs (nth (:content x) 6))) "'></td>"
           "<td><a href='" (:href (:attrs (nth (:content x) 1))) "'>view</a></td>"
           "<td>" (:title (:attrs (nth (:content x) 6))) "</td>"
           "<td>"
           (if (get (:content x) 11)
            (apply str
             (map
               (fn [keyword]
                 (str "<a href='http://mindbroker.de/wiki/'" keyword "'>" keyword "</a>"))
              (seq (.split (:content (get (:content x) 11)))))))
           "</td>"
           "</tr>
           ")))
       (:content (clojure.xml/parse "http://feeds.seesmic.com/user.rainer.atom"))))
     "</table>")
   ) "")))
;}}}
